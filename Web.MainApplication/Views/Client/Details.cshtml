@model Repository.Application.DataModel.Client

@{
    ViewBag.Title = "Details";
    if (Request.Params["layoutIsNull"] != null && (Convert.ToBoolean(Request.Params["layoutIsNull"])) == true)
    {

        Layout = null;
    }

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="box box-solid">
        <div class="box-header with-border">
            <b class="box-title">@ViewBag.Title</b>
        </div>
        <div class="box-body">
            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.Type)
                    </div>
                </div>
                <div>
                    <div class="col-md-2"><b>Email</b></div>
                    @*@Html.LabelFor(model => model.EmailAddress1, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.Email != null ? @Model.Email: "-")
                        @*@Html.DisplayFor(model => model.Email)*@

                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>Client Name</b></div>
                    @*@Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.FullName)
                    </div>
                </div>
                <div>
                    <div class="col-md-2"><b> </b></div>
                    @*@Html.LabelFor(model => model.EmailAddress1, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.EmailAddress1 != null ? @Model.EmailAddress1 : "-")
                        @*@Html.DisplayFor(model => model.EmailAddress1)*@

                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>Short Name</b></div>
                    @*@Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.ShortName)
                    </div>
                </div>

                <div>
                    <div class="col-md-2"><b> </b></div>
                    @*@Html.LabelFor(model => model.EmailAddress2, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.EmailAddress2 != null ? @Model.EmailAddress2 : "-")
                        @*@Html.DisplayFor(model => model?.EmailAddress2??)*@
                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>Birth Place</b></div>
                    @*@Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.BirthPlace)
                    </div>
                </div>

                <div>
                    <div class="col-md-2"><b>Mobile Phone</b></div>
                    @*@Html.LabelFor(model => model.MobilePhone1, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.MobilePhone1 != null ? @Model.MobilePhone1 : "-")
                        @*@Html.DisplayFor(model => model.MobilePhone1)*@

                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>Birth Date </b></div>
                    @*@Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @*@Html.DisplayFor(model => model.BirthDate)*@
                        @(Model.BirthDate.HasValue ? Model.BirthDate.Value.ToString("dd/MM/yyyy") : "-")
                    </div>
                </div>

                <div>
                    <div class="col-md-2"><b> </b></div>
                    @*@Html.LabelFor(model => model.MObilePhone2, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.MObilePhone2 != null ? @Model.MObilePhone2 : "-")
                        @*@Html.DisplayFor(model => model.MObilePhone2)*@

                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>ID Number</b></div>
                    @*@Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.IdNumber)
                    </div>
                </div>

                <div>
                    <div class="col-md-2"><b> </b></div>
                    @*@Html.LabelFor(model => model.MobilePhone3, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @(Model.MobilePhone3 != null ? @Model.MobilePhone3 : "-")
                        @*@Html.DisplayFor(model => model.MobilePhone3)*@
                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.Sex)
                    </div>
                </div>

                <div>
                    <div class="col-md-2"><b>Marital Status</b></div>
                    @*@Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.MaritalStatus)
                    </div>
                </div>
            </div><br />


            <div class="row">
                <div>
                    <div class="col-md-2"><b>Relate To</b></div>
                    @*@Html.LabelFor(model => model.RelateTo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @{
                            if (Model.Client3 != null)
                            {
                                @Ajax.ActionLink(Model.Client3.FullName , "Details","Client", new { id = Model.Client3.ClientId, layoutIsNull = true }, new AjaxOptions() {
                               OnBegin = "ShowSpinner();$('#myModalTemporaryContent').html('');",
                               OnSuccess = "HideSpinner();",
                               LoadingElementDuration = 3000,
                               OnComplete = "$('#myModalTemporary').modal('show');",
                               UpdateTargetId = "myModalTemporaryContent",
                               HttpMethod = "GET",
                               InsertionMode = InsertionMode.Replace
                           })
                            }

                        }

                    </div>
                </div>
                <div>
                    <div class="col-md-2"><b>Client Relation</b></div>
                    @*@Html.LabelFor(model => model.ClientRelation, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.ClientRelation)
                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>ID Bank</b></div>
                    @*@Html.LabelFor(model => model.BankAccountCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.BankAccountCode)
                    </div>
                </div>
            </div><br />

            <div class="row">
                <div>
                    <div class="col-md-2"><b>Bank Account Name</b></div>
                    @*@Html.LabelFor(model => model.BankAccountName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-4">
                        @Html.DisplayFor(model => model.BankAccountName)
                    </div>
                </div>
            </div><br />

                  <div class="row">
                      <div>
                          <div class="col-md-2"><b>Bank Account Number</b></div>
                          @*@Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@
                          <div class="col-md-4">
                              @Html.DisplayFor(model => model.BankAccountNumber)
                          </div>
                      </div>
                      <div>
                          <div class="col-md-2"><b>Address</b></div>
                          @*@Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })*@
                          <div class="col-md-4">
                              @Html.DisplayFor(model => model.Address)
                          </div>
                      </div>
                  </div><br />
        </div>

        @{
            if (Layout != null)
            {
                <div class="box-footer">
                    <div class="form-actions color">
                        <div class="col-md-offset-2 col-md-10">
                            <a href="/client" class="btn btn-default">Back</a>
                            @Html.ActionLink("Edit", "Edit", new { id = Model.ClientId }, new { @class = "btn btn-primary", style = "background-color:#008CBA; color:white;" })
                        </div>
                    </div>
                </div>
            }
        }


    </div>
}