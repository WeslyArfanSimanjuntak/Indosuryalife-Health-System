@model Repository.Application.DataModel.CommonListValue

@{
    ViewBag.Title = "Create Common List Value";
}

<div class="box box-solid">
    <div class="box-header with-border">
        <b class="box-title">
            @ViewBag.Title
        </b>
    </div>
    <!-- /.box-header -->


    <div class="box-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="box-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div>
                        @Html.Label("Parent Id", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("ParentId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <br />

                <div class="row">
                    <div>
                        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <br />

                <div class="row">
                    <div>
                        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control",@required="required" } })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <br />

                <div class="row">
                    <div>
                        @Html.LabelFor(model => model.Desc, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Desc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Desc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <br />

                <div class="row">
                    <div>
                        @Html.Label("Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("IsActive", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <br />

                <div class="row">
                    <div>
                        <div class="form-group">
                            <div class="col-md-push-2 col-md-8">
                                @Html.ActionLink("Back", "Index", "CommontListValue", new { @class = "btn btn-default" })
                                <input type="submit" value="Create" class="btn btn-primary" style="background-color:#008CBA; color:white;" />
                            </div>
                        </div>
                    </div>
                </div> <br />

            </div>

        }

    </div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
